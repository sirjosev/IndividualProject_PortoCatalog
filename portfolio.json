{
  "profile": {
    "name": "Yusuf Al-Rahman",
    "title": "Researcher",
    "bio": "Passionate about developing innovative IoT and ML solutions. Have hands-on experience in building embedded systems, sensor networks, and implementing machine learning algorithms for real-time data analysis.",
    "imageUrl": "https://media.licdn.com/dms/image/v2/D5603AQFJycJgumVOMA/profile-displayphoto-shrink_400_400/profile-displayphoto-shrink_400_400/0/1691390038406?e=1758153600&v=beta&t=H-q_QZPXwpU_Of3wU2_7YXNpRN-u27oX96EUp_bZ0bg",
    "githubUrl": "https://github.com/sirjosev",
    "linkedinUrl": "https://www.linkedin.com/in/yusuf-al-rahman-8049a21b3/"
  },
  "items": [
    {
      "id": "item-BNSP-ManajemenTokoBeras",
      "title": "Program Manajemen Toko Beras",
      "categories": "#Python #Firebase #Firestore",
      "description": "Program ini dirancang untuk membantu pemilik toko beras dalam mengelola stok barang, mencatat transaksi penjualan, dan menyediakan fitur pencarian untuk memudahkan pengelolaan data.",
      "media": [],
      "documentation": "Program Manajemen Toko Beras menggunakan **Python** sebagai bahasa pemrograman utama dan **Firebase (Firestore)** sebagai database NoSQL berbasis cloud untuk penyimpanan data yang aman dan terstruktur. Firestore memungkinkan penyimpanan data secara real-time dan terstruktur dalam bentuk koleksi dan dokumen.\n\n**Struktur Database:**\n*   **Collection 'barang'**: Setiap dokumen mewakili satu jenis beras. Fields: `nama` (string, ID dokumen), `ukuran` (integer, kg), `harga` (integer, per kg), `stok` (integer).\n*   **Collection 'transaksi'**: Setiap dokumen mewakili satu transaksi penjualan. Fields: `nama_pelanggan` (string), `tanggal` (timestamp), `nama_beras` (string), `ukuran` (integer), `jumlah` (integer), `keterangan` (string, opsional), `total_harga` (float, termasuk pajak), `keterangan_pajak` (string).\n\n**Alur Kerja Program:**\nProgram menampilkan menu pilihan. Pengguna dapat menerima input untuk berbagai pilihan:\n* **Tambah Barang**: Menginput data barang dan menyimpannya ke Firebase.\n* **Tambah Transaksi**: Menginput data transaksi, memvalidasi stok, menghitung total harga (termasuk pajak 11%), dan menyimpan data transaksi ke Firebase. Jika stok tidak mencukupi atau barang tidak ditemukan, akan ada pesan kesalahan.\n* **Tampilkan Barang**: Mengambil dan menampilkan daftar barang dari Firebase dalam bentuk tabel.\n* **Tampilkan Transaksi**: Mengambil dan menampilkan daftar transaksi dari Firebase dalam bentuk tabel.\n* **Cari Barang/Transaksi**: Mencari data barang atau transaksi berdasarkan kata kunci (case-insensitive) dan menampilkan hasilnya dalam bentuk tabel.\n* **Keluar**: Mengakhiri program.\n\n**Petunjuk Menjalankan Program:**\n* Instal pustaka yang diperlukan: `!pip install firebase-admin pandas`.\n* Unggah file JSON private key Firebase Anda ke direktori yang sama dengan notebook, lalu ganti path dalam kode Python sesuai lokasi file tersebut.\n* Jalankan semua sel kode di notebook secara berurutan.\n* Program akan menampilkan menu pilihan dan pengguna dapat mengikuti petunjuk untuk berinteraksi.\n\n---\n\n### Penting Kode ini ditujukan untuk tujuan pembelajaran dan demonstrasi. Dalam aplikasi nyata, disarankan untuk menambahkan penanganan error yang lebih baik dan fitur keamanan yang lebih ketat (misalnya, otentikasi pengguna) sebelum digunakan dalam produksi."
    },
    {
      "id": "item-CCITProject-FlipNote",
      "title": "Aplikasi Pencatat Daftar/Catatan (FlipNote)",
      "categories": "#Java #SQLite #GUI",
      "description": "Aplikasi desktop yang dikembangkan dalam Java untuk membuat dan mengelola daftar atau catatan, dengan kemungkinan fitur manajemen pengguna dan daftar (`lists`).",
      "media": [],
      "documentation": "Proyek **FlipNote** menggunakan **SQLite** sebagai format database-nya. Aplikasi ini dikembangkan dalam **Java**.\n\n---\n\n### Struktur Database SQLite\n*   Tabel `sqlitebrowser_rename_column_new_table` dengan kolom `title` (TEXT), `description` (TEXT), `date` (TEXT).\n*   Tabel `lists` dengan kolom `title` (TEXT), `description` (TEXT), `date` (TEXT).\n*   Tabel `user` dengan kolom `fullname` (TEXT), `username` (TEXT UNIQUE, PRIMARY KEY), `password` (TEXT), `email` (TEXT UNIQUE).\n\nKelas `FlipList.Page.java` mengimpor `java.sql.*` dan `javax.swing.JTable`, menunjukkan penggunaan fitur database SQL dan antarmuka pengguna grafis (GUI) Swing."
    },
    {
      "id": "item-CCITProject-WaterReminderAdib",
      "title": "Aplikasi Pengingat Minum Air (Water Reminder)",
      "categories": "#Android #Kotlin #Health",
      "description": "Aplikasi pengingat minum air untuk platform Android, kemungkinan melacak asupan air harian dan mengelola notifikasi.",
      "media": [],
      "documentation": "Proyek **Water Reminder Adib** menggunakan **Kotlin**.\n\n---\n\n### Konfigurasi Data Pengguna (Shared Preferences)\nAplikasi ini menggunakan kunci-kunci untuk menyimpan preferensi pengguna, meliputi:\n*   `WEIGHT_KEY`: Berat badan.\n*   `WORK_TIME_KEY`: Waktu kerja.\n*   `TOTAL_INTAKE`: Total asupan air.\n*   `NOTIFICATION_STATUS_KEY`: Status notifikasi.\n*   `NOTIFICATION_FREQUENCY_KEY`: Frekuensi notifikasi.\n*   `NOTIFICATION_MSG_KEY`: Pesan notifikasi.\n*   `SLEEPING_TIME_KEY`: Waktu tidur.\n*   `WAKEUP_TIME`: Waktu bangun.\n*   `NOTIFICATION_TONE_URI_KEY`: URI nada notifikasi.\n*   `FIRST_RUN_KEY`: Indikator penggunaan pertama aplikasi.\n\nKehadiran `ChartXValueFormatter.kt` mengindikasikan bahwa aplikasi ini mungkin memiliki kemampuan untuk menampilkan data dalam bentuk grafik atau chart."
    },
    {
      "id": "item-CCIT-TissueDispenserUI",
      "title": "Antarmuka Pengguna (UI) untuk Sistem Dispenser Tisu Pintar",
      "categories": "#WebUI #Firebase #HTML #CSS #JavaScript",
      "description": "Sistem antarmuka pengguna untuk memantau status dispenser tisu, dengan kemampuan menambahkan perangkat baru dan melihat panduan, terintegrasi dengan database Firebase.",
      "media": [],
      "documentation": "Proyek **Tissue Dispenser UI** adalah antarmuka frontend yang dikembangkan menggunakan **HTML, CSS** (termasuk variabel `--bs-body-font-family` yang menunjukkan kemungkinan penggunaan Bootstrap 5), dan **JavaScript**. Aplikasi ini terhubung ke **Firebase** dengan `default` project ID `tissue-dispenser-fe5fc`.\n\n---\n\n### Fungsionalitas Utama \nAntarmuka ini menampilkan status dispenser tisu, dengan pesan seperti 'Your Tissue is Calling' dan informasi tentang level tisu (misalnya, 'HABIS', 'Lantai 1 A 02'). Pengguna dapat 'Tambah Perangkat' melalui `public/activity_add.html` dan 'Lihat Panduan' di `https://github.com/sirjosev/CCIT_TissueDispenser_Guide`.\n\n---\n\n### Struktur Database (Firebase Firestore)\nData disimpan dalam koleksi `tissue_dispensers` yang berisi dokumen untuk setiap dispenser, seperti `Lt1A01` dan `Lt2B01`. Setiap dokumen memiliki _fields_:\n*   `id` (Number)\n*   `status` (String, contoh: 'habis')\n*   `location` (String, opsional, contoh: 'Toilet lantai 2 selatan')\n*   `last_update` (Timestamp, opsional)\n*   `sensor_distance` (Number).\n\nKode JavaScript (`test-fitur/tissueDispenser.js`) menunjukkan interaksi dengan Firebase Firestore untuk mengambil data koleksi dan dokumen. Bagian lain dari kode menunjukkan definisi dan penggunaan kelas JavaScript (`H`, `W`, `Jn`, `TemplateFactory`) serta utilitas DOM (`B`, `z`) untuk mengelola tampilan dan interaktivitas."
    },
    {
      "id": "item-Competition-StatisticForAthleticAssoc",
      "title": "Statistik untuk Asosiasi Atletik",
      "categories": "#Python #DataAnalysis #Statistics",
      "description": "Program untuk menganalisis hasil lomba lari, menghitung _range_, _average_, dan _median_ dari waktu tempuh pelari, serta menyajikan hasilnya dalam format waktu yang spesifik (`hh|mm|ss`).",
      "media": [],
      "documentation": "Proyek ini adalah kompetisi 'Statistics for an Athletic Association' yang melibatkan pengolahan data hasil lomba lari.\n\n---\n\n### Deskripsi Masalah\nTim akan menerima sebuah _string_ yang berisi semua hasil lomba lari setiap tim. Tugasnya adalah mengembalikan _string_ yang berisi tiga nilai statistik: **Range, Average, dan Median**, dalam format `\"Range: hh|mm|ss Average: hh|mm|ss Median: hh|mm|ss\"`. Setiap `hh`, `mm`, `ss` harus berupa bilangan bulat (direpresentasikan sebagai _string_) dengan dua digit.\n\n---\n\n### Catatan Penting\n*   Jika hasil dalam detik adalah `ab.xy...`, maka akan dipotong menjadi `ab`.\n*   Jika _string_ input kosong `\"\"`, maka harus mengembalikan `\"\"`.\n\n---\n\n### Pendekatan Solusi\n* **Parsing Data**: Mengurai _string_ input yang berisi waktu (`hh|mm|ss`) menjadi total detik untuk setiap entri.\n* **Pengurutan**: Mengurutkan semua observasi (waktu dalam detik) dari nilai terendah hingga tertinggi.\n* **Perhitungan Statistik**:\n    *   **Range**: Perbedaan antara nilai tertinggi dan terendah.\n    *   **Average**: Rata-rata dari semua waktu.\n    *   **Median**: Nilai tengah dari data yang telah diurutkan.\n\n---\n\n### Pengujian\nTersedia tautan untuk menguji solusi di platform Codewars: `https://www.codewars.com/kata/55b3425df71c1201a800009c`."
    },
    {
      "id": "item-Competition-TroubleshootRobotSearchAndDisable",
      "title": "AD2070: Memecahkan Masalah Robot - Pencarian dan Penonaktifan",
      "categories": "#Python #LogAnalysis #Algorithms",
      "description": "Program Python untuk menganalisis log sistem dan mendeteksi 'BOT berbahaya' berdasarkan kriteria integer spesifik: bilangan prima 4 digit dengan digit ketiga 2 atau 3, muncul lebih dari 3 kali, dan total kemunculan semua integer valid >50.",
      "media": [],
      "documentation": "Proyek ini membahas tantangan di tahun 2070 untuk membantu Lorimar, seorang _forward deployed machine engineer_, dalam memecahkan masalah robot dengan menganalisis log sistem.\n\n---\n\n### Deskripsi Soal \nMenganalisis log sistem untuk mendeteksi BOT berbahaya berdasarkan pola integer berikut:\n* Bilangan prima 4 digit (contoh: 1031).\n* Digit ketiga (ratusan) harus 2 atau 3 (contoh: 1**2**31, 1**3**31).\n* Muncul lebih dari 3 kali dalam log.\n* **Total kemunculan** semua integer yang memenuhi kriteria di atas harus >50.\n\n---\n\n### Output \n*   Jika total >50: `\"match disable bot\"`.\n*   Jika tidak: `\"no match continue\"`.\n\n---\n\n### Pendekatan Solusi\n* **Prekomputasi Bilangan Prima**: Menggunakan Sieve of Eratosthenes untuk menghasilkan bilangan prima hingga 9999.\n* **Parsing Log dan Validasi Kriteria**: Memproses setiap entri dalam log, memastikan mereka adalah angka 4 digit tanpa _leading zero_, digit ketiga adalah 2 atau 3, dan termasuk dalam daftar bilangan prima.\n* **Hitung Frekuensi Kemunculan**: Mencatat frekuensi setiap integer yang valid.\n* **Jumlahkan Total Kemunculan**: Menjumlahkan total kemunculan integer yang muncul lebih dari 3 kali.\n\n---\n\n### Implementasi Kode Fungsi `search_disable(log)` yang mengimplementasikan logika di atas.\n\n---\n\n### Contoh Test Case \n*   **Test Case 3 (Log Campuran)**: Log `'8923 5639 2423 3929 7723 ' * 10 + '8923'` akan menghasilkan `\"match disable bot\"`.\n*   **Test Case 4 (Frekuensi Kurang)**: Log `'2423 ' * 3` akan menghasilkan `\"no match continue\"` karena `2423` hanya muncul 3 kali (â¤3).\n*   **Test Case 5 (Gabungan Entri Valid & Tidak Valid)**: Log `'5639 ' * 26 + '2423 ' * 3 + '3929 ' * 30` akan menghasilkan `\"match disable bot\"`.\n\n---\n\n### Pengujian di Platform Codewar Solusi dapat diuji melalui tautan `https://www.codewars.com/kata/57dc0ffed8f92982af0000f6`."
    },
    {
      "id": "item-Competition-UnderstandingFlightDelays",
      "title": "Memahami Keterlambatan Penerbangan",
      "categories": "#Python #DataAnalysis #MachineLearning",
      "description": "Proyek analisis data dan machine learning untuk memahami faktor-faktor yang menyebabkan keterlambatan penerbangan dan memprediksi keterlambatan.",
      "media": [],
      "documentation": "Proyek ini berfokus pada analisis dan pemahaman keterlambatan penerbangan. Proyek ini menggunakan **Python** dengan pustaka seperti **pandas, numpy, matplotlib, seaborn, dan scikit-learn**.\n\n---\n\n### Langkah-langkah Proyek\n* **Persiapan Data**: Mengimpor pustaka yang diperlukan.\n* **Load dan Gabungkan Data**: Membaca file CSV `flights.csv` dan `airlines_carrier_codes.csv`, lalu menggabungkan keduanya berdasarkan kolom _carrier_.\n* **Pembersihan Data**: Mengecek data yang hilang (missing values), di mana `dep_time`, `dep_delay`, `arr_time`, `arr_delay`, `air_time`, `tailnum`, `index`, `Carrier Code`, dan `Airline Name` teridentifikasi memiliki nilai yang hilang. Langkah ini juga mencakup konversi waktu.\n* **Analisis Data Eksplorasi (EDA)**: Menganalisis tren keterlambatan berdasarkan waktu, seperti rata-rata keterlambatan per bulan menggunakan plot.\n* **Prediksi Keterlambatan (Opsional 1)**: \n    *   **Feature Engineering**: Membuat fitur-fitur yang relevan seperti `month`, `day`, `dep_hour`, `carrier`, `origin`, `dest`, `distance`. Targetnya adalah penerbangan dengan keterlambatan (`dep_delay`) >= 15 menit.\n    *   **Split Data dan Latih Model**: Membagi data menjadi _training_ dan _test set_ (80/20) dan melatih model **RandomForestClassifier**. Akurasi model yang ditunjukkan adalah **0.85**.\n* **Analisis Faktor Utama (Opsional 2)**: Mengeksplorasi pentingnya fitur (_feature importances_) dari model yang dilatih.\n\n---\n\n### Visualisasi\nProyek ini juga mencakup visualisasi yang dibuat dengan Pydeck, seperti `us_nyc_avg_arr_delay.html` dan `us_nyc_avg_dep_delay.html`."
    },
    {
      "id": "item-Competition-UnveilingTrendsInRenewableEnergy",
      "title": "Prediksi Tren Energi Terbarukan",
      "categories": "#Python #MachineLearning #DataScience",
      "description": "Proyek ini bertujuan untuk membangun model machine learning yang kuat untuk memprediksi produksi energi terbarukan (dalam GWh) di berbagai negara, membantu pengambilan keputusan investasi yang lebih cerdas, perumusan kebijakan, dan percepatan transisi global menuju energi bersih. Proyek ini merupakan solusi untuk tantangan kompetisi 'Unveiling Trends in Renewable Energy' yang diselenggarakan oleh DataCamp.",
      "media": [],
      "documentation": "Proyek ini berfokus pada **prediksi produksi energi terbarukan** dan menggunakan **Python**.\n\n---\n\n### Stack Teknologi\n*   **Analisis & Manipulasi Data**: `pandas`, `numpy`.\n*   **Machine Learning**: `scikit-learn` (pra-pemrosesan & validasi), `lightgbm` (model utama).\n*   **Visualisasi & Interpretasi**: `matplotlib`, `seaborn`, `geopandas`, `shap`.\n*   **Lingkungan Kerja**: `Jupyter Notebook`.\n\n---\n\n### Alur Kerja Program\n* **Inisialisasi dan Pemuatan Data**: Mengimpor pustaka dan memuat dataset training (`Training_set_augmented.csv`) serta testing (`Public_Test_Set.csv`).\n* **Analisis Data Eksplorasi (EDA)**: Inspeksi struktur data (2400 baris, 31 kolom untuk training; 600 baris, 31 kolom untuk test), tipe data (float64, int64, object), analisis nilai hilang (tidak ada), dan distribusi variabel target (`Production (GWh)`) termasuk transformasi logaritmik.\n* **Rekayasa Fitur (Feature Engineering)**: Membuat fitur-fitur prediktif baru seperti fitur temporal (`Decade`, `Post_Paris_Agreement`), metrik efisiensi ekonomi (`GDP_per_Capita`, `CO2_per_GDP`), indeks momentum kebijakan (`Policy_Momentum`), dan indeks komposit potensi energi terbarukan (`Renewable_Potential`).\n* **Pra-pemrosesan Data**: Memisahkan fitur (X) dan target (y), mengidentifikasi fitur numerik dan kategorikal, menerapkan `StandardScaler` untuk fitur numerik, dan `OneHotEncoder` untuk fitur kategorikal.\n* **Strategi Validasi Model**: Menggunakan `TimeSeriesSplit` untuk validasi silang yang sesuai untuk data deret waktu, guna mencegah kebocoran data.\n* **Pelatihan Model**: Melatih model **LightGBM** yang dikenal cepat dan efisien.\n* **Pembuatan dan Penyimpanan Prediksi**: Menghasilkan prediksi untuk _test set_ dan menyimpannya dalam format CSV (`renewable_energy_predictions.csv`).\n\n---\n\n### Struktur Repositori\nDirektori proyek mencakup `data/` (training dan test set), `notebooks/` (notebook utama), `deployment_package/` (artefak produksi seperti `model.pkl`, `preprocessor.pkl`, `shap_explainer.pkl`, `features.json`, `documentation.json`), dan `outputs/` (hasil prediksi dan laporan EDA interaktif).\n\n---\n\n### Cara Deployment (Hipotetis)\nMeskipun dalam format notebook, artefak model dapat di-_deploy_ sebagai API (misalnya dengan Flask atau FastAPI) setelah model (`model.pkl`) dan _preprocessor_ (`preprocessor.pkl`) disimpan."
    },
    {
      "id": "item-Competition-WaterfowlSurvey",
      "title": "Memproses Hasil Survei Burung Air",
      "categories": "#Python #DataProcessing #Algorithms",
      "description": "Fungsi untuk memproses laporan survei bebek, mengonversi nama bebek umum menjadi kode enam huruf spesifik, menjumlahkan hitungan untuk setiap spesies, dan mengembalikan hasil yang diurutkan. Data akan didiskualifikasi jika spesies 'Labrador Duck' ditemukan.",
      "media": [],
      "documentation": "Proyek ini melibatkan pemrosesan data survei burung air (bebek) di Amerika Utara.\n\n---\n\n### Deskripsi Masalah\nInput fungsi adalah _array_ berisi nama umum bebek dan jumlahnya, dipisahkan oleh spasi. Nama mungkin berulang dari berbagai lokasi survei. Tugasnya adalah mengonversi nama umum bebek menjadi kode enam huruf spesifik, menjumlahkan hitungan untuk setiap spesies, dan mengembalikan hasilnya yang diurutkan berdasarkan kode tersebut. **Penting**: Jika 'Labrador Duck' (spesies punah) ditemukan dalam laporan, seluruh _dataset_ harus didiskualifikasi dan mengembalikan `[\"Disqualified data\"]`.\n\n---\n\n### Fungsionalitas Utama\n*   **`create_report(names)`**: Fungsi ini memproses setiap entri dalam _array_ input `names`.\n    *   Melakukan pengecekan awal untuk 'Labrador Duck'. Jika ditemukan, langsung mengembalikan status diskualifikasi.\n    *   Jika tidak didiskualifikasi, ia mengurai nama dan jumlah, menghasilkan kode untuk setiap nama bebek, dan menjumlahkan total hitungan untuk setiap kode.\n    *   Mengurutkan kode secara leksikografis dan membangun daftar hasil akhir yang berisi kode dan jumlahnya.\n*   **`get_code(name)`**: Fungsi pembantu yang mengubah nama bebek menjadi kode enam huruf:\n    *   Memproses nama dengan mengganti _hyphen_ dengan spasi.\n    *   **Untuk nama satu kata**: Mengambil 6 karakter pertama.\n    *   **Untuk nama dua kata**: Mengambil 3 karakter pertama dari kata pertama dan 3 karakter pertama dari kata kedua.\n    *   **Untuk nama tiga kata**: Mengambil 2 karakter pertama dari setiap kata dan menggabungkannya.\n\n---\n\n### Input Contoh\nArray dengan daftar nama bebek dan jumlahnya, seperti `[\"Mallard 10\", \"Northern Pintail 5\"]`."
    },
    {
      "id": "item-FHI-MatchMaestro",
      "title": "Manajemen Alur Kerja dan Utilitas Aplikasi",
      "categories": "#Genkit #TypeScript #React",
      "description": "Proyek yang mengelola alur kerja otomatis (flows) menggunakan Genkit, didukung oleh fungsi utilitas, data statis, dan custom React hooks untuk pengembangan aplikasi.",
      "media": [],
      "documentation": "Proyek **Match Maestro** memiliki struktur direktori yang terorganisir, mengindikasikan pengembangan aplikasi dengan fokus pada alur kerja dan komponen frontend:\n\n*   **`flows/`**: Berisi semua alur kerja (**flows**) Genkit, contohnya `match-storyteller.ts`. Ini menunjukkan penggunaan kerangka kerja Genkit untuk mengotomatiskan proses atau logika bisnis.\n*   **`src/lib/`**: Direktori ini menyimpan fungsi utilitas dan pustaka pembantu yang dapat digunakan di seluruh aplikasi, seperti `utils.ts` untuk fungsi utilitas umum.\n*   **`src/data/`**: Berisi data _mock_ atau statis yang digunakan untuk tujuan pengembangan dan pengujian.\n*   **`src/hooks/`**: Direktori ini menampung _custom React hooks_ yang digunakan dalam aplikasi, menunjukkan penggunaan React untuk membangun antarmuka pengguna.\n*   **`public/`**: Merupakan aset statis yang akan disajikan secara publik, seperti gambar atau ikon.\n*   **`docs/`**: Berisi file dokumentasi tambahan, seperti `blueprint.md`."
    },
    {
      "id": "item-Freelancing-MicroserviceIdentification",
      "title": "Identifikasi Microservice dari Arsitektur Monolitik",
      "categories": "#Python #Java #MachineLearning #Microservices",
      "description": "Alat berbasis _shell_ yang menggunakan **Topic Modelling** dan **Clustering** untuk mengidentifikasi microservice dari proyek yang dibangun dengan arsitektur monolitik.",
      "media": [],
      "documentation": "Proyek **Microservice Identification** adalah alat yang dirancang untuk membantu dalam proses _refactoring_ arsitektur monolitik menjadi microservice. Ini menggunakan kombinasi teknik analisis kode dan _machine learning_.\n\n---\n\n### Stack Teknologi\n*   **Python**: Bahasa pemrograman utama untuk logika _machine learning_ dan analisis.\n*   **Java**: Bahasa dari kode sumber proyek monolitik yang dianalisis.\n*   **Pustaka Python**: `community`, `gensim`, `igraph`, `javalang`, `kneed`, `networkx`, `nltk`, `numexpr`, `numpy`, `pandas`, `scikit-learn`, `scipy`, `seaborn`, `sklearn`, `pyLDAvis`, `karateclub`, `stop-words`, `multipledispatch`.\n*   **Maven**: Digunakan untuk menjalankan tes dalam proyek.\n\n---\n\n### Alur Kerja & Fungsionalitas\n* **Ekstraksi Data**: Mengunduh repositori GitHub (_git clone_) dan mengekstrak informasi proyek seperti jumlah kelas Java dan _controller_. Juga mengumpulkan data metadata repositori seperti bintang, _fork_, ukuran, dan isu terbuka.\n* **Parsing Kode Sumber**: Menggunakan `javalang` untuk mengurai file Java ke dalam _Abstract Syntax Tree_ (AST) dan mengekstrak informasi kelas dan metode. Juga mengekstrak komentar.\n* **Pra-pemrosesan Teks**: Membersihkan teks dari kode sumber (misalnya, menghapus _stop words_ dan melakukan _stemming_) untuk analisis tekstual.\n* **TF-IDF**: Menghitung skor TF-IDF untuk dokumen teks guna mengukur relevansi kata.\n* **Topic Modelling (LDA)**: Menerapkan Latent Dirichlet Allocation (LDA) untuk mengidentifikasi topik dalam kode dan menetapkan kelas ke topik-topik tersebut, yang dapat menjadi kandidat microservice.\n* **Clustering / Community Detection**: Menerapkan algoritma Louvain untuk _community detection_ pada grafik dependensi kode untuk mengidentifikasi _cluster_ kelas yang dapat menjadi microservice. Bobot _edge_ pada grafik dapat dihitung berdasarkan struktur (_structural_) atau TF-IDF.\n* **Perhitungan Metrik**: Menghitung berbagai metrik untuk mengevaluasi kualitas _clustering_ dan desain microservice, seperti:\n    *   **CHM (Cohesion per Hierarchy of Methods)**.\n    *   **CHD (Cohesion per Hierarchy of Domains)**.\n    *   **IFN (Interface Number)**.\n    *   **IRN (Inter-Release Number)**.\n    *   **OPN (Operations per Service Number)**.\n    *   **SMQ (Service Modularity Quality)**.\n    *   **CMQ (Class Modularity Quality)**.\n* **Penyimpanan Hasil**: Hasil clustering dan metrik disimpan dalam file teks dan CSV, seperti `clustering.txt`, `output.json`, `results.csv`, dan file metrik spesifik proyek.\n\n---\n\n### Analisis dan Visualisasi Proyek ini juga mencakup _Jupyter Notebooks_ (`Time analysis.ipynb`, `Metric_analysis.ipynb`) untuk analisis data dan visualisasi hasil metrik, termasuk grafik distribusi kelas dan _boxplot_ metrik.\n\n---\n\n### Deployment/Pengujian Skrip `setup.sh` disediakan untuk instalasi dependensi. `run_tests.py` digunakan untuk menjalankan analisis pada beberapa proyek."
    },
    {
      "id": "item-Help-HazelWebOnlineVote2",
      "title": "Aplikasi Web Sistem Pemungutan Suara Online",
      "categories": "#PHP #MySQL #WebVoting",
      "description": "Aplikasi web sederhana untuk mengelola event pemungutan suara, kandidat, dan mencatat suara. Dilengkapi fitur _quick count_ dan peran pengguna (Publik, Voter, Admin).",
      "media": [],
      "documentation": "Aplikasi **Hazel Web Online Vote** dibangun menggunakan **PHP** sebagai bahasa pemrograman utama di sisi server, **MySQL** untuk database, **HTML5** sebagai struktur dasar halaman, dan **Tailwind CSS** untuk antarmuka yang modern dan responsif.\n\n---\n\n### Peran & Fungsionalitas\n* **Publik (Tanpa Login)**: Dapat mengakses halaman utama (`index.php`) dan melihat hasil _quick count_ dari semua event yang sedang berlangsung atau selesai.\n* **Voter**: \n    *   Mendaftar dan _login_ ke sistem.\n    *   Melihat daftar event berdasarkan domisili atau skala nasional, serta status event (Akan Datang, Berlangsung, Selesai).\n    *   Melihat status pribadi (Sudah Memilih / Belum Memilih).\n    *   Mengakses halaman detail event untuk melihat daftar kandidat dan memilih.\n* **Administrator**: \n    *   Mengelola event (menambah, mengedit, menghapus).\n    *   Mengelola kandidat (menambah, mengedit, menghapus), termasuk mengunggah foto kandidat.\n    *   Mengelola pengguna.\n\n---\n\n### Struktur Database \nAplikasi ini menggunakan tabel `candidates` yang menyimpan informasi `event_id`, `nama_kandidat`, `partai_asal`, `nomor_urut`, dan `foto_kandidat`.\n\n---\n\n### Fungsionalitas Unggah Gambar\nAplikasi mengelola unggahan foto kandidat, termasuk validasi, pembuatan nama file unik, dan pemindahan file ke direktori tujuan. Jika unggahan gagal, gambar _placeholder_ atau foto lama akan digunakan.\n\n---\n\n### API Quick Count\nTersedia _endpoint_ `api/quick_count.php` yang dirancang untuk menghasilkan _output_ dalam format JSON."
    },
    {
      "id": "item-Help-RanggaLsp",
      "title": "Portal Web LSP-DKS",
      "categories": "#PHP #MySQL #WebPortal #Certification",
      "description": "Situs web yang berfungsi sebagai pusat informasi untuk Lembaga Sertifikasi Profesi (LSP-DKS), menyediakan detail skema sertifikasi, unit kompetensi, persyaratan, metode asesmen, blog, dan manajemen pengguna.",
      "media": [
        "dksassets/img/skema_684ae725eaa7c.png",
        "dksassets/img/skema_684ae72a02aa0.png",
        "dksassets/img/skema_684ae81a3f8ed.png",
        "dksassets/img/skema_684ae83071516.png",
        "dksassets/img/skema_684aea1643f04.png",
        "dksassets/img/skema_684aea23d5e3b.png",
        "dksassets/img/skema_684aead748c8a.png",
        "dksassets/img/skema_684aeb51ecdaa.png",
        "dksassets/img/skema_684aeb6cccfa4.png",
        "dksassets/img/skema_685919b768224.png",
        "dksassets/img/skema_6859349474b15.png",
        "dksassets/img/skema_6859419ebc3a7.png",
        "dksassets/img/skema_68594330cae42.png"
      ],
      "documentation": "Proyek **LSP-DKS Portal Web** adalah portal web yang berfungsi sebagai pusat informasi dan manajemen untuk Lembaga Sertifikasi Profesi (LSP-DKS). Aplikasi ini dibangun menggunakan **PHP 8.x (Native)**, **MySQL/MariaDB**, **HTML5**, **CSS3**, dan **JavaScript (ES6+)**. Framework **Bootstrap 5** digunakan untuk desain responsif dan **Font Awesome** untuk ikonografi.\n\n---\n\n### Struktur Database\nDatabase `dks` terdiri dari beberapa tabel utama yang saling berelasi:\n*   `skema`: Informasi detail setiap skema sertifikasi (nama, kode, jenis, harga, unit_kompetensi, masa_berlaku, ringkasan, gambar, created_at, updated_at).\n*   `unit_kompetensi`: Unit-unit kompetensi terkait skema (skema_id, no_urut, kode_unit, judul_unit, standar_kompetensi, lampiran_file).\n*   `persyaratan`: Persyaratan umum untuk setiap skema.\n*   `dokumen_persyaratan`: Daftar dokumen yang diperlukan (nama, wajib).\n*   `metode_asesmen`: Metode asesmen yang digunakan (jenis_peserta, metode, deskripsi).\n*   `blog`: Artikel dan berita yang ditampilkan di halaman blog (id, title, content, featured_image, publish_date, status).\n*   `users`: Data pengguna dan admin untuk otentikasi/otorisasi.\nFile `.sql` (`skema.sql`, `blog.sql`, `dummy_blogs.sql`) disediakan untuk struktur dan data contoh database.\n\n---\n\n### Alur Kerja Program\n* **Alur Pengunjung**:\n    *   **Halaman Utama (`index.php`)**: Menampilkan profil singkat LSP-DKS, visi & misi, 6 skema sertifikasi unggulan, dan 3 artikel terbaru.\n    *   **Melihat Sertifikasi (`sertifikasi.php`)**: Melihat daftar lengkap semua skema.\n    *   **Detail Skema (`skema.php`)**: Informasi lengkap skema, unit kompetensi, persyaratan, biaya.\n    *   **Membaca Blog (`blog.php`)**: Menampilkan artikel dan berita, dengan detail di `blog_detail.php`.\n    *   **Registrasi & Login (`register.php`, `login.php`)**: Pendaftaran dan masuk pengguna.\n* **Alur Administrator**:\n    *   **Login**: Melalui `login.php` dengan kredensial admin.\n    *   **Dashboard Admin (`admin.php`)**: Setelah login, admin diarahkan ke _dashboard_.\n    *   **Manajemen Skema (`admin_skema.php`)**: Admin dapat melakukan operasi CRUD (Create, Read, Update, Delete) pada data skema dan aset gambar. Fitur termasuk _upload_ gambar dengan validasi ukuran (maks 2MB) dan format (JPG, PNG, GIF), serta _cropping_ gambar menjadi rasio 1:1.\n    *   **Manajemen Blog (`admin_blog.php`)**: Admin dapat menambah, mengedit, dan menghapus artikel/berita.\n    *   **Logout (`logout.php`)**: Keluar sesi admin.\n\n---\n\n### Instalasi dan Deployment\nMembutuhkan _web server_ (Apache/Nginx) dan PHP 8.0+. Pengguna dapat _clone_ repositori atau mengunduh file ZIP, membuat database `dks`, mengimpor `skema.sql` dan `blog.sql` (opsional `dummy_blogs.sql`), dan mengonfigurasi koneksi database di `config.php`."
    },
    {
      "id": "item-IndividualProject-Dockers",
      "title": "Monitor Lalu Lintas Jaringan Docker",
      "categories": "#Python #Flask #Docker #NetworkMonitoring",
      "description": "Aplikasi Python Flask yang berjalan di lingkungan Docker untuk memonitor lalu lintas jaringan, mem-parsing log, dan menyediakan endpoint API untuk data lalu lintas.",
      "media": [],
      "documentation": "Proyek **Docker Traffic Monitor** adalah aplikasi **Python Flask** yang dirancang untuk memantau lalu lintas jaringan. Aplikasi ini berjalan pada _port_ 5000.\n\n---\n\n### Fungsionalitas Utama\n*   **`monitor_traffic()`**: Fungsi ini bertanggung jawab untuk mem-parsing baris _log_ lalu lintas dan mengekstrak informasi seperti waktu (_time_), protokol (_protocol_), sumber (_source_), dan tujuan (_destination_). Data yang di-parsing kemudian ditambahkan ke daftar `traffic_data`.\n*   **`/traffic` _endpoint_**: Merupakan _endpoint_ API yang menyediakan data lalu lintas yang telah dipantau dan diproses dalam format JSON.\n\nMeskipun file `requirements.txt` disebutkan, isinya tidak diberikan dalam sumber, sehingga detail dependensi Python tidak diketahui secara eksplisit."
    },
    {
      "id": "item-IndividualProject-HandwriteNotes",
      "title": "Pengenalan Tulisan Tangan (Handwriting Recognition)",
      "categories": "#Python #OCR #GUI #Docker",
      "description": "Alat sederhana yang dibangun dengan Python untuk melakukan Pengenalan Karakter Optik (OCR) pada gambar tulisan tangan, dengan antarmuka pengguna grafis (GUI) dan kemampuan deployment menggunakan Docker yang dapat diakses dari jarak jauh via VNC.",
      "media": [],
      "documentation": "Proyek **Pengenalan Tulisan Tangan (Handwriting Recognition)** adalah aplikasi OCR yang bertujuan untuk mengenali teks dari gambar tulisan tangan.\n\n---\n\n### Stack Teknologi\n*   **Python**: Bahasa pemrograman utama.\n*   **Tkinter**: Pustaka standar Python untuk membuat antarmuka pengguna grafis (GUI).\n*   **Pillow**: Pustaka untuk manipulasi gambar.\n*   **Pytesseract**: Pustaka Python sebagai _wrapper_ untuk mesin OCR Tesseract Google.\n*   **Tesseract OCR**: Mesin OCR inti yang harus diinstal pada sistem.\n*   **Docker**: Digunakan untuk membuat _container_ dan melakukan _deployment_ aplikasi beserta lingkungannya.\n*   **VNC (Virtual Network Computing)**: Digunakan dalam konteks Docker untuk mengakses GUI aplikasi dari jarak jauh.\n\n---\n\n### Cara Kerja Program (Alur Kerja)\n* Pengguna menjalankan aplikasi, dan jendela utama dengan tombol 'Submit' akan muncul.\n* Ketika tombol 'Submit' diklik, dialog file akan terbuka.\n* Pengguna memilih file gambar (`.png`, `.jpg`) yang berisi tulisan tangan.\n* Aplikasi menggunakan Pillow untuk membuka gambar dan Pytesseract untuk mengirimkannya ke mesin Tesseract.\n* Tesseract menganalisis gambar dan mengembalikan teks yang dikenali.\n* Hasil teks tersebut kemudian ditampilkan dalam jendela pesan (_pop-up_).\n\n---\n\n### Petunjuk Penggunaan (Lokal)\n*   **Prasyarat**: Instal Python 3 dan Tesseract OCR (petunjuk instalasi untuk Ubuntu/Debian, macOS, dan Windows disertakan). Pastikan direktori instalasi Tesseract ditambahkan ke `PATH` sistem.\n*   **Instalasi Pustaka Python**: `pip install pillow pytesseract`.\n*   **Menjalankan Aplikasi**: `python handwriting_recognition.py`.\n\n---\n\n### Cara Deployment (Docker)\nMetode deployment yang disarankan adalah menggunakan Docker untuk mengemas aplikasi. Karena ini adalah aplikasi GUI, aplikasi dijalankan di dalam server VNC di dalam _container_ untuk akses jarak jauh.\n*   **Dockerfile**: Berisi instruksi untuk menginstal pustaka Python, menyalin skrip aplikasi, mengekspos _port_ VNC (5901), mengatur kata sandi VNC, dan perintah untuk memulai server VNC serta aplikasi Python.\n*   **Langkah-langkah Deployment**: \n    * _Build Docker Image_: `docker build -t handwriting-recognition .`.\n    * _Jalankan Docker Container_: `docker run -p 5901:5901 -d --name ocr-app handwriting-recognition`.\n    *   `5901:5901`: Memetakan _port_ 5901 dari _container_ ke _port_ 5901 di mesin _host_.\n* Setelah kontainer berjalan, pengguna dapat terhubung menggunakan _client_ VNC (_e.g., VNC Viewer_) ke `localhost:5901` dan memasukkan kata sandi yang telah diatur di `Dockerfile`."
    },
    {
      "id": "item-IndividualProject-KadoUltah",
      "title": "Aplikasi Web Personal untuk Kado Ulang Tahun",
      "categories": "#HTML #JavaScript #WebPersonal",
      "description": "Proyek web sederhana (_single-page_) yang menyajikan kado ulang tahun berupa video tersemat. Aplikasi ini tidak memerlukan server atau proses _build_, cukup buka file `index.html` di browser modern.",
      "media": [
        "Video_Kado_Ultah_Sena.mp4"
      ],
      "documentation": "Proyek **Kado Ultah Sena** adalah aplikasi web personal yang dirancang sebagai kado ulang tahun.\n\n---\n\n### Cara Penggunaan dan Deployment\n*   **Menjalankan Secara Lokal**: Cukup buka file `index.html` di browser modern.\n*   **Deployment**: Cara termudah adalah menggunakan **GitHub Pages**.\n    * Buat repositori baru di GitHub.\n    * Unggah semua file proyek (`index.html`, `Video_Kado_Ultah_Sena.mp4`, `script.js`, `style.css`) ke repositori tersebut.\n    * Masuk ke tab **Settings** di repositori Anda, lalu pilih menu **Pages** di _sidebar_ kiri.\n    * Di bawah 'Build and deployment', pilih sumber ke 'Deploy from a branch'.\n    * Pilih _branch_ `main` (atau `master`) dan folder `/root`. Klik **Save**.\n    * Setelah beberapa menit, proyek akan tersedia di `https://<username>.github.io/<repository-name>/`.\n\n---\n\n### Panduan Kustomisasi\nSemua konfigurasi utama dapat ditemukan di dalam tag `<body>` pada file `index.html`. Ini memungkinkan personalisasi pesan, tautan, dan elemen lain dari kado."
    },
    {
      "id": "item-IndividualProject-MyDAShowcase",
      "title": "Portofolio Interaktif Analis Data",
      "categories": "#HTML #CSS #JavaScript #Portfolio",
      "description": "Situs web portofolio _single-file_, tanpa instalasi, dengan desain modern bertema gelap dan responsif, menampilkan proyek analis data dalam format modal yang meniru tampilan Jupyter Notebook.",
      "media": [],
      "documentation": "Proyek **Interactive Data Analyst Portfolio** dirancang untuk menampilkan proyek analis data secara interaktif.\n\n---\n\n### Fitur\n*   **Single File Application**: Seluruh portofolio terkandung dalam satu file `.html`.\n*   **Zero Installation**: Tidak memerlukan proses _build_ atau _server_, dapat dijalankan langsung di _web browser_.\n*   **Responsive Design**: Beradaptasi dengan berbagai ukuran layar (desktop, tablet, _mobile_).\n*   **Dark Theme**: Desain modern dengan tema gelap.\n*   **Interactive Project Cards**: Menampilkan ringkasan setiap proyek.\n*   **Detailed Project Modal**: Terbuka saat kartu proyek diklik, menyajikan detail proyek dalam gaya 'Jupyter Notebook' dengan sel teks, sel _code snippet_, dan sel visualisasi.\n\n---\n\n### Stack Teknologi\n*   **HTML**: Struktur dasar.\n*   **Tailwind CSS**: Untuk desain antarmuka.\n*   **Vanilla JavaScript (ES6+)**: Untuk interaktivitas, _dynamic content rendering_, dan fungsionalitas modal.\n\n---\n\n### Cara Penggunaan\n* Simpan seluruh kode ke dalam file `.html` (misalnya, `portfolio.html`).\n* Luncurkan di _browser_ dengan mengklik dua kali file `.html` tersebut.\n\n---\n\n### Kustomisasi\nSemua konten dan data proyek tertanam di dalam file `portfolio.html`. Kustomisasi dilakukan dengan mengedit file ini menggunakan _text editor_.\n*   **Informasi Personal**: Mengubah nama (contoh: 'Yusuf Al-Rahman'), URL gambar profil, paragraf intro, tautan GitHub/LinkedIn di bagian _Hero Section_. Memperbarui alamat _email_, URL LinkedIn, dan nomor WhatsApp di bagian _Contact Section_. Memperbarui tahun hak cipta dan teks versi portofolio di bagian _Footer_.\n*   **Data Proyek**: Detail proyek disimpan dalam _JavaScript array_ bernama `projectsData` di dalam tag `<script>`.\n\n---\n\n### Filosofi Kerja\nBagian 'Filosofi Kerja Saya' menekankan 'Pengambilan Keputusan Berbasis Data', yang dimulai dengan memahami konteks bisnis, mendefinisikan metrik relevan, dan menerapkan metode statistik yang sesuai."
    },
    {
      "id": "item-IndividualProject-OnTheGoArticleCMS",
      "title": "Editor CMS Artikel Portabel",
      "categories": "#HTML #JavaScript #CMS",
      "description": "Editor CMS artikel berbasis web yang sepenuhnya di sisi klien, tanpa memerlukan _backend_ atau _database_. Memungkinkan pengguna untuk membuat dan mengelola konten artikel dengan fitur _drag & drop_, pengeditan komponen, dan generasi/unduh HTML.",
      "media": [],
      "documentation": "Proyek **On-The-Go Article CMS** adalah aplikasi editor CMS ringan dan portabel yang berjalan sepenuhnya di sisi klien (_client-side_). Ini dirancang untuk membuat dan mengelola konten artikel tanpa ketergantungan pada _backend_ atau _database_.\n\n---\n\n### Cara Penggunaan\n* Buka file `.html` yang disimpan langsung di _browser_ modern mana pun.\n* **Tambah Komponen**: Gunakan panel 'Add Component' di kiri untuk menambahkan blok konten baru (seperti _Headings_, _Paragraphs_, _Images_, _Spacer_, _Button_) ke area kanvas.\n* **_Drag & Drop_**: Klik dan seret komponen dalam area kanvas untuk menyusun ulang posisinya.\n* **Edit Komponen**: Arahkan kursor ke komponen di kanvas untuk menampilkan tombol 'Edit' dan 'Delete'. Klik 'Edit' untuk membuka modal dan mengubah properti komponen.\n\n---\n\n### Alur Kerja Program (Untuk Pengembang)\n* **Representasi Komponen**: Setiap blok konten (misalnya, _Heading_, _Paragraph_) direpresentasikan sebagai objek dalam _JavaScript array_ bernama `components`.\n* **_Content Rendering_**: Fungsi `renderComponents()` akan memperbarui antarmuka pengguna (UI) berdasarkan isi _array_ `components`.\n* **Penyimpanan Lokal**: Perubahan disimpan ke `localStorage` _browser_ melalui `saveComponents()` untuk mempertahankan sesi pengeditan. Data dimuat dari `localStorage` saat aplikasi dimulai melalui `loadComponents()`.\n* **Generasi HTML**: Saat 'Publish' atau 'Preview', _string_ dokumen HTML lengkap dihasilkan dengan mengiterasi _array_ `components` dan mengonversi setiap objek komponen menjadi representasi HTML yang sesuai dengan _inline styles_.\n* **Pengunduhan File**: Pustaka `FileSaver.js` digunakan untuk membuat _Blob_ dari _string_ HTML yang dihasilkan dan memicu pengunduhan file HTML.\n\n---\n\n### Kustomisasi & Ekstensi (Untuk Pengembang)\nProyek ini dapat diperluas dengan menambahkan tipe komponen baru dengan mendefinisikan tipe baru di `DEFAULT_COMPONENT_PROPS`."
    },
    {
      "id": "item-IndividualProject-PortoCatalog",
      "title": "Manajer Portofolio Berbasis Web",
      "categories": "#HTML #CSS #JavaScript #Portfolio #Markdown",
      "description": "Aplikasi web portofolio _single-page_ yang sepenuhnya berjalan di sisi klien (_client-side_). Didesain untuk menjadi solusi yang ringkas, cepat, dan mudah dikelola tanpa memerlukan basis data atau _server backend_. Semua data dikelola melalui satu file `portfolio.json` dan disimpan sementara di _browser_ pengguna, memberikan pengalaman pengeditan langsung.",
      "media": [],
      "documentation": "Proyek **Manajer Portofolio Berbasis Web** bertujuan untuk menyediakan platform bagi para profesional untuk menampilkan karya dan profil mereka secara modern dan interaktif.\n\n---\n\n### Tujuan Proyek\n*   Menampilkan Profil Profesional (informasi pribadi, keahlian, tautan sosial).\n*   Mempresentasikan Portofolio Proyek (deskripsi, media, dokumentasi teknis).\n*   Manajemen Konten yang Mudah (antarmuka _admin_ sederhana).\n*   Portabilitas Data (ekspor/impor data JSON).\n*   Deployment Sederhana (hosting statis).\n\n---\n\n### Stack Teknologi\n*   **HTML5**: Struktur dasar.\n*   **Tailwind CSS**: Kerangka kerja CSS _utility-first_ untuk desain modern.\n*   **Vanilla JavaScript (ES6)**: Logika inti aplikasi, manajemen _state_, manipulasi DOM, fungsionalitas _admin_.\n*   **Marked.js**: Pustaka kecil untuk _parsing_ Markdown menjadi HTML.\n*   **JSON**: Format data utama untuk menyimpan konten.\n\n---\n\n### Alur Kerja Program\n* **Inisialisasi**: Saat halaman dimuat, JavaScript mencoba mengambil data dari `portfolio.json`.\n* **_Fallback_ ke _LocalStorage_**: Jika `portfolio.json` tidak dapat diakses/kosong, data dimuat dari `localStorage` _browser_ untuk mempertahankan sesi pengeditan.\n* **_Render_ Tampilan**: Data profil dan item portofolio ditampilkan di UI.\n* **Mode _Admin_**: \n    *   Pengguna dapat mengklik tombol 'Login' dan memasukkan kata sandi (default: `sirjosev`).\n    *   Setelah berhasil _login_, status disimpan di `sessionStorage`, dan kontrol _admin_ (tambah, edit, hapus) akan muncul.\n* **Manajemen Konten (CRUD)**:\n    *   **Tambah/Edit**: _Admin_ dapat mengisi formulir untuk menambah atau mengedit item (judul, deskripsi, kategori, tautan media, dokumentasi Markdown).\n    *   **Hapus**: Item dapat dihapus dengan konfirmasi.\n    *   **Edit Profil**: Informasi profil (nama, bio, tautan sosial) dapat diubah.\n* **Penyimpanan Sementara**: Setiap perubahan **segera disimpan di `localStorage` _browser_**.\n* **Penyimpanan Permanen (Ekspor)**: Untuk membuat perubahan terlihat oleh pengunjung lain, _admin_ **harus** menggunakan tombol 'Ekspor Semua' untuk mengunduh `portfolio.json` yang baru. File ini kemudian harus menggantikan file `portfolio.json` yang ada di repositori proyek.\n\n---\n\n### Struktur Data (`portfolio.json`)\nFile `portfolio.json` adalah pusat aplikasi, terdiri dari objek utama dengan properti `profile` dan `items`.\n*   `profile`: Objek berisi informasi pribadi (`name`, `title`, `bio`, `imageUrl`, `githubUrl`, `linkedinUrl`).\n*   `items`: _Array_ dari objek portofolio, setiap objek memiliki `id`, `title`, `categories` (string dengan tag dipisahkan spasi dan diawali '#'), `description`, `media` (_array_ URL gambar/video), `documentation` (string Markdown).\n\n---\n\n### Petunjuk Penggunaan\n*   **Untuk Pengunjung**: Akses URL _hosting_, gulir untuk melihat kartu proyek, filter berdasarkan tag, klik kartu untuk melihat detail (_preview_).\n*   **Untuk _Admin_**: _Login_, kelola item (_Tambah_, _Edit_, _Hapus_), _Edit Profil_, dan **SANGAT PENTING** untuk _Export All_ dan mengganti file `portfolio.json` di repositori GitHub.\n\n---\n\n### Cara Deployment (Contoh GitHub Pages)\n* Pastikan repositori GitHub sudah siap dengan semua file.\n* Buka **Settings** -> **Pages** di repositori GitHub.\n* Konfigurasi 'Build and deployment': pilih 'Deploy from a branch' (`main` atau `master`), pastikan folder diatur ke `/ (root)`, lalu **Save**.\n* GitHub akan menyediakan URL publik setelah proses _deployment_ selesai."
    },
    {
      "id": "item-IndividualProject-PortoLandPage",
      "title": "Halaman Landing Page Portofolio Hilman Firdaus",
      "categories": "#VueJS #HTML #CSS #JavaScript #Portfolio",
      "description": "Halaman _landing page_ portofolio pribadi untuk seorang _Fullstack Developer_ yang menampilkan profil, layanan, proyek, dan kontak, di-deploy menggunakan Firebase Hosting.",
      "media": [
        "frontend/assets/pdf/Hilman-Firdaus-CV.pdf",
        "frontend/assets/img/7.png",
        "frontend/assets/img/6.png",
        "frontend/assets/img/8.png",
        "frontend/assets/img/home.png",
        "frontend/assets/img/project1.png",
        "frontend/assets/img/about-2.jpeg",
        "frontend/assets/img/blob.svg",
        "frontend/assets/img/client.jpg"
      ],
      "documentation": "Proyek **Portfolio Landing Page Hilman Firdaus** adalah halaman _landing page_ pribadi untuk seorang _Fullstack Developer_. Proyek ini menggunakan **Vue.js** (ditunjukkan oleh file `.vue`), serta **HTML, CSS**, dan **JavaScript** untuk tampilan _frontend_.\n\n---\n\n### Deployment\nProyek ini di-deploy menggunakan **Firebase Hosting**, dengan `default` project ID `portolp-c7413`.\n\n---\n\n### Struktur dan Konten\n*   Halaman ini mencakup berbagai bagian seperti _Home_, _About_, _Skills_, _Portfolio_, _Contact_.\n*   **Bagian Kontak (`ContactView.vue`)**: Menampilkan informasi kontak seperti nomor telepon (`081914209656`), _email_ (`hilmanfirdaus48@gmail.com`), dan lokasi (`Cigondewah - Kota Bandung`). Juga ada formulir untuk 'Name', 'Email', 'Project', dan 'Message'.\n*   **Bagian Footer (`FooterView.vue`)**: Menampilkan nama 'Hilman Firdaus' sebagai 'Fullstack Developer & Software Quality', tautan navigasi ke _Services_, _Portfolio_, _Contact_, dan tautan media sosial (Facebook, Instagram, Twitter).\n*   **Aset**: Proyek ini menyertakan aset gambar (`.png`, `.jpeg`, `.svg`, `.jpg`) dan file PDF CV (`Hilman-Firdaus-CV.pdf`).\n\n---\n\n### Styling\nFile CSS (`styles.css`, `main.css`) mendefinisikan berbagai properti gaya untuk elemen-elemen UI, termasuk _font sizes_, _margins_, _paddings_, _colors_, dan responsivitas untuk perangkat yang berbeda."
    },
    {
      "id": "item-IndividualProject-VoiceCloneForTextToSpeech",
      "title": "Kloning Suara untuk Text-to-Speech",
      "categories": "#Python #MachineLearning #TextToSpeech",
      "description": "Proyek yang berfokus pada kloning suara untuk aplikasi Text-to-Speech, kemungkinan melibatkan model _machine learning_ yang dikembangkan dalam lingkungan Jupyter Notebook.",
      "media": [],
      "documentation": "Proyek **Voice Clone For Text To Speech** adalah sebuah inisiatif yang berpusat pada teknologi kloning suara untuk aplikasi _Text-to-Speech_ (TTS).\n\n---\n\n### Implementasi\nBerdasarkan struktur file yang diberikan, proyek ini diimplementasikan dalam sebuah _Jupyter Notebook_ bernama `Voice_Cloning_for_Text_to_Speech.ipynb`. Hal ini menunjukkan bahwa proyek ini kemungkinan besar melibatkan proses eksperimen, pengembangan model, dan analisis data dalam lingkungan interaktif yang lazim untuk proyek _machine learning_ dan ilmu data.\n\nKarena sumber hanya menyediakan nama proyek dan file notebook, detail spesifik tentang algoritma kloning suara, _dataset_ yang digunakan, atau hasil yang dicapai tidak tersedia."
    },
    {
      "id": "item-Komandro-TodoApp",
      "title": "Aplikasi To Do List Prototype",
      "categories": "#Flutter #Android #ToDoApp",
      "description": "Aplikasi Flutter daftar tugas sederhana yang memungkinkan pengguna menambahkan, mengedit, menghapus, dan melihat detail dari setiap item tugas. Setiap item tugas memiliki tugas, status penyelesaian, dan tanggal. Pengguna juga dapat berbagi item tugas ke media sosial.",
      "media": [],
      "documentation": "Proyek **Todo List App Prototype** adalah aplikasi daftar tugas yang dikembangkan menggunakan **Flutter**.\n\n---\n\n### Gambaran Umum\nAplikasi ini dirancang untuk memungkinkan pengguna mengelola item tugas dengan fungsionalitas dasar seperti menambah, mengedit, menghapus, dan melihat detail tugas. Setiap tugas memiliki atribut seperti deskripsi, status penyelesaian, dan tanggal. Aplikasi ini juga mendukung fitur berbagi tugas ke media sosial.\n\n---\n\n### Berkas Utama\nSemua kode program utama aplikasi berada dalam berkas `main.dart`.\n\n---\n\n### Fungsionalitas Kunci\n*   **Pengelolaan Item Tugas**: Termasuk kemampuan untuk beralih status penyelesaian (dari _completed_ ke belum selesai, dan sebaliknya) dari suatu item tugas.\n*   **Berbagi Item Tugas**: Pengguna dapat membagikan detail item tugas menggunakan ikon berbagi yang tersedia di halaman detail.\n\n---\n\n### Panduan Penggunaan\n* Jalankan aplikasi dengan menjalankan `main.dart`.\n* Lihat dan kelola item tugas di layar utama.\n* Ketuk item tugas untuk melihat informasi detailnya.\n* Edit, hapus, atau alihkan status penyelesaian dari halaman detail.\n* Bagikan item tugas menggunakan ikon berbagi.\n\n---\n\n### Struktur Proyek\nFile `.gitignore` menunjukkan pengaturan untuk proyek Flutter dan integrasi dengan lingkungan pengembangan seperti IntelliJ IDEA. Terdapat juga _CMakeLists.txt_ yang mengindikasikan struktur _build_ untuk aplikasi Flutter, termasuk lokasi file data ICU dan pustaka AOT."
    },
    {
      "id": "item-Komandro-UIUXIntro",
      "title": "Panduan Singkat UI/UX",
      "categories": "#UIUX #Design",
      "description": "Panduan singkat mengenai seni merancang pengalaman digital yang menarik, fungsional, dan memenuhi kebutuhan pengguna, mencakup tahapan penting dalam proses mendesain.",
      "media": [],
      "documentation": "Dokumentasi **Panduan Singkat UI/UX** yang ditulis oleh Hastho Rahtomo dan di-markdown oleh Muhammad Fauzan Arrafi pada 17 Oktober 2023.\n\n---\n\n### Deskripsi\nPanduan ini memperkenalkan dasar-dasar desain _User Interface_ (UI) dan _User Experience_ (UX). UI/UX design didefinisikan sebagai seni merancang pengalaman digital yang menarik, fungsional, dan memenuhi kebutuhan pengguna. Dokumentasi ini menguraikan tahapan-tahapan penting dalam perjalanan mendesain.\n\nKonten yang disajikan berfokus pada pengenalan konsep dasar UI/UX tanpa detail implementasi teknis."
    },
    {
      "id": "item-Komandro-HTMLCSSGuide",
      "title": "Panduan Dasar HTML dan CSS",
      "categories": "#HTML #CSS #WebDev #Tutorial",
      "description": "Panduan dasar untuk membuat website statis menggunakan HTML dan CSS. Dokumen ini menjelaskan langkah-langkah mulai dari persiapan lingkungan hingga styling elemen web.",
      "media": [
        "https://lh3.googleusercontent.com/pw/ADCreHeqKHqBNHEly80exzyISunSN13tomYfmRSc_f50RaZ4zRHu49EXR651fCPV3C7_3lNoxr1cImjFnBLXypjoFL8zl6zRlb3-hlxBzW16yDHIpcsgIFKW0Xf1iqkftigHbF-Tl4wih5trXv9kw6fBc4s=w586-h199-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHeVW2NMENLiaoqYbUId_LJHApmMzWNbw0F0urmkjlzjC3Ns2dex5sZ-i3hvVRu0GToOE6TdndrkOaedqAT3LIEAKSeUZHxmawdePVl79XnA05lB2leTWm_XgqV_jqKbJUTQ2nyk38QvY0LSpHV8FOA=w1215-h683-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHeYCuk1phqCBRWI_fhOYSA2s5t5FAgfnjAjAkg37b7WsNwETUHv9zKdgyRK6YD20VMCK6YoP5RHnmYrXFXJyb3lAKQD-Rv--b0Dh2sLXqFIwFkrdTeWTC3-AgTmq50asc0c4tuIyBR_my2JOB5k5Y8=w1215-h683-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHeu_9qF33C84dWxAkPGwX6JW7X7gwtaL8ket8Sc0vP6wQ2aVldXxoPe4u6lk84PFC_7WYA3EXwrAhydyb3EQVb1FVWH0pAJRpNsri7rMkN0mTEr0kT4wSTAJ60J724POjYmm85c1E4ONvSTZOfM1oQ=w1215-h683-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHeGmrLtxH2OmBFYY--nfLN_Ior374_0g7NN2IwilIIESe-EoxgYVLf6Hh3ljsOaWzvGUFubfMMg6mbDdBdWtXywYtBsm5FNI3_WGFJXKVIqYTDTPmf2E3NzUi2JzzkkZvXdPZX5n_h5um65Duojws4=w1215-h683-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHfGdnMdg-pTpal0fx0qEUQJofDp2sVVCJcI8GRkXKJOqNvdTWNOdU6QiHL6FwoojZGk16ZGr7Kn0XwmmmZV4gNNvbDEGjNTlkWM7iki93QDx5eeGxPENpNpMRhL33RQiVvcdPwbGb7vJPvVY8UYf3U=w1215-h683-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHdUuYdK9MoVqV49W-k2495PDaB0YaLPSKE0YFoh3-YkDc5LtQzFORpobiE6USOtegVoHIS5r6bW6Po8z6eXKkB70-UX2Dm59rASria2IA2QPnMtYVJZb4OltYb8JIMpqUHcbx9BgjXW5k1lXHi6rco=w189-h63-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHdhEU4KsjoTSRBmD4z6mKghNzQx_6j8gOUhOaE7DF5zO6SSUYqis9kjrgfnXoeqlcHHr-MGtBM0TG2CvU_GE7saqyckSRZkTpRfzI4MuTQQ9Mx1mPmnbCoc5LNS7r54t014fg-aS8sewFJ4yYGkcb8=w190-h63-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHc5C5gvUHMxDrANbOCoU1ltbBps2XaLVB-J7Ox61WbLZHxAA7gvQrBBZyyB4wp8TNNVMHaRdFJR00DGcKGY9mNqML6ILwo_qPimvxqVG7UjD2PFxS4AJaso4_0a01lIqLlQLV5dnKr02LRU5blxTQc=w637-h219-s-no?authuser=1",
        "https://lh3.googleusercontent.com/pw/ADCreHdgAzmOfJ2kOtD21SmorY_fsZC3z3rdSXotCSfGwNp1Os6Ndd1NY3aeMja-25LuihzxjSWEBl2MWjfYgxNLaFO7qr2FyIvlWQSw-idi0NT6UKG5U0W-3P72ueC0JF3ci3o2IWlGPeNAM-HelOmSGGM=w589-h198-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHf5aJHLMU40HY-XOqAqCOlAQaufPf4uXyDO5D-OcxsUOreq2uD8S0DpcvhwtscRa7gVu580pIFh-9gxqOPglozB3HTncWm4HHc4E1FdsmuGjuGd6lwTjicj6w4gSAZC3fedg6WwT1nQdrpF6VvHjG4=w747-h491-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHf32f6_VByNlVa05B-_RPHrgLLO62G0IiyOhVHpLl13ZRpN7gzsLQrsmvzY6WpX4MNWXAPgAuh3Yke1M3H-a3B0HW9o4vsaCKQq5zfoqghJ-saDyIewjdghlCde9MkXXl1dPEnO2aradpLbwKeCVnQ=w290-h391-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHdGB2qP2e5lI7LSJl1URuIngOv_pUvvPDy_NpO0pkeMzMx9X413_9Nzs11YgHlb9jpxgyC-Eu5F00VK98V4VxT-JrR7tbYBsdsDReiOJI885iZPg0KKlT-7EfPGMjhu3-nAAX6suK51diZku0--Z6w=w164-h70-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHflf9_I829arSl-punGGB6G5cfxBD4bUEjtXE-kJg3eJQTuIWLFTnh863RRQQwGKJKhArfe1G15XNqN-iiR43xAdF1fP9hEM5tU8YTaBjimbW9UqwQhJy3sia7if6AXhqIEW7ipTtpHmmSABfnQO-Y=w679-h355-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHfYOkN2W_CMJAJXIvVvcmnyZtJIzyIYU_rq5TRom5EK9MD3XaUf6mNygK_xSSPa5Dwv7c2Qko9FMeuWYPO-Oo0MfKfNieXnvb-VOU790UL7-VwOc34aDjP6d12kfK-qLWqKPzCONM11V3GhOaXMZ8E=w404-h107-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHdBh4Iw4EhyhgVdHRlXkO58V32GJyMyyqeXQZ88oFugUEs0BZTTx1Q2ugw51N1tRkHIl26pZY_lIng9txjKMTrBs_keb_UcE451wgmE7eDKJ8D9Mhqy8Ey3DyfG6TOHExcWBUEePioWRPEEFmGIMWM=w197-h127-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHeJoWd7yLhy597CDYqypWxUWfVy1LBZGKzDBbyYSDuV_EZSZQETzNzW8z7acK9RHKUtRF_LcjewmdipoRZK_6Hm7Z0VzL61uLx0zlVLu9LetIuEd0YgCzrCKdIoHesMobtcGmiy96ysLR2nGVeEHa8=w200-h129-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHe0uhKfYygQuBqeO2BgwWnUOK3dHqgtlZLNzGyoeRMZCPc2gqmUtKmJP526CAKHa1nnfttG8HkKySo8lEHdML5mz1pKYlbs4xRgOUv_PPp565rLK-3_3rIKe8h6eLuqlYiVm3-2xxC_rRhhrsVBJms=w143-h89-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHe_L08KQ5NU5Mj5VtJvC2v3j9nV4boQFAEJqw_0oIfuu7KSoV0tk1fjO1XgJzgaLOEI--OC9_tT6ka4-htjtjlqEX1CJtloHRb8x2m3dJdVZSirl_7T9PFiWaI_sDJi4j_ALOWU792EzBkJEoH97HE=w103-h87-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHd6G0ab82AQXuTMGAk1rpwyUFzWj0avfl1KwWrOTuI2isvsENaszEiK-76oDSQalrtb-CizKHYvwkx4cCkHyA_R0wHLLaca2J6kaWz_zq30Rm1te7zAjIAO-cKT0ZGSincGPxvBub3zBV4f8nPpyrE=w551-h36-s-no?authuser=4",
        "https://upload.wikimedia.org/wikipedia/en/e/e7/Steve_%28Minecraft%29.png",
        "https://lh3.googleusercontent.com/pw/ADCreHcHlan-ibXDwCU8ZeEZQf9_Elbs7KPIK0unCsSNyO3MwC5uDaiU55Zft0dJMZWBJVLzE2S0LiI4385b3i5nlmHyF2uTHwbedKF33KhnPU6pNUDt4GXYj4NRuffyHymqxvhRkmnIBmAUNJAETrtPLOM=w678-h416-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHfoFZ71qVNTYRwprv1e0aXPMNNcHxZD9N1PFi8YJkRycFMirPMkIrMCpO6BBAKSEdQyahbWlyI9QXj-ZFpPtLJQOzCEwn87y3yiv90A4VTQ8NSQBQWCb0YKVr_b3PHg_blrNMvQXueS_N2-dAVPDtc=w669-h97-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHfuMjkvurntBdGi8GIFYJL2EYmAzMn6dUgjaSylWdV1NGmfGqmhAk9NwPf1Zqq2IeLKbTl8N69qDPWmWfWfvBVwgQMXtBgbIdLBy4_AQQwQF5Fbm4kUmLxVFJjD60JUPXxC84cUaCXeFX61wq8LAQY=w179-h94-s-no",
        "https://lh3.googleusercontent.com/pw/ADCreHevnDjcItzgI3fqiflg45gBBXzDqs87X6xF2M0LJKjnUW2vHXfSdreXivwdWW-baDFKj7nU_txwASU0lti3kxhOr9tOfFMqWxouIuIS9CQtJUFDWapnvqcJPk67gaWwieIzqS66730xyfcRLAZRQHM=w583-h160-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHehIx2jjxtsAG5TafXCW9qlJtOm1gmkRktpYNnkST5WiXbVpMjIlZML8elBkHX8DbCPMgC3yPStowtggeWSOge1xGG80beUo349LluzxyhSWnHuDGQTmVNE5vqoR_7DSa3qQYDlyNBNW1UUIRjyWnk=w367-h62-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHeW7yudEj56n8TVqrRVi3RiI8w-pUC2JIRqHOi3Z4tQ6S8UFb-Qt_wj2ddYkuBxuF1mi7MGesmDQRFfnuF2rdH1Y12gnlxXKjbCwuUue40KTO_66FZg_BtMDEC-c-BP0l8AJty298XchivvzRPxPqk=w142-h90-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHe0uNy_glKvtW6UyGHRTIpqnOkHav8lNWQwhVKDDen8ucZUkFu9gAvsRkSVPvPSvidU8Zxgra0olgDgft4BxhJ4zaJL36LLjM9iuf1yjJXPw5RprmyWM5JgW9bxEehLCGjDClTblcknoljuaczBlMA=w238-h143-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHcABSe8rGbwmDGbj_EpYrHcyiRq_LQHhfUgPS6N7zTYR-Cg2fjIWMPw67ZUzOD0piHtheH-mm0e63ZY1gPHXJ58D_bySDVjuEAiBptm6hD_gwk3DNjMD-G-J42ag7XhKxfx-LmkdJykVx4vaB4qmH4=w131-h78-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHdDy4JaquhIzU8L7QBMxyObkt0cEZjzc7jw1SEegyy3B_ly7a9cc5yrDvBbblcCRutWGZ7gZt18656WpWk8jqGODkJY5H-DxVzfils-2oFJmWreWzuOkoqSutoeuTvFQpFHOXZbNLgnzbGdg4-TLFE=w1366-h178-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHfD90_x_d2ftkHKpGlcEncyECwMdxqrmSAfu-c93PFvTNzPad1ICdaKOrMtWnB3TSfd0j11BDJYr9ZFDUr_7jCbipHxuNAEhJ-eUmon0uKLJfLJY8grgDLOL10VHwsBfI8doX9FVh-L4SEp8k61moc=w127-h74-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHfzUsWgiRPc1ZPLBlS9YLmRvVv7SjT-FTfAQ-YXAWmsVfBNNBTtFLqw_Zxu0W3wjeve7juiMX51x35jHr_nYHN79ho2FxrbonXmjrgxOyN3gxgZObIhQ6lQcF7rqS7ULAT8dnMDThQZOKebZ31ni_0=w154-h37-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHebSZHJgjNbqpgrgtL1cNfGdNuPKMG0le5XH3TQKKASidOtmjDplaPTPmD1Ev2RKeL51XtivusqfNEMeZgL-R5YWYBs3gtYcLEcDoXS2Dgget8L8EudmK_SeyOE8hD0sno23lqNaIH0IF3P3wd13jQ=w409-h188-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHflNfXdvpt_rPWekllWyD9vwqX8iC-rEzzvoPnieExS2jljzFMyUqwghr72thY9XANNwqtCr-jPlScPLrlWWBs5j61cJO9upBPOnTCWiTIB9d3rpa9SO1wBXqpem2jZiMIjSAuF08hVbu4KmhEHA6o=w339-h161-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHdGd-QK2Lhf0euC7Jrx4ddZf9x2aNuJAdOodZ6IXI8uac3-mmtWjL3w6urBxB4AKaM8ZOhWzLrRp-SydcEyh5yuASrlQd2MQUfIMVFc54ES5N8GBQOpB2eV3aD_EasHhXPCvbkazwXwsmz4Y95voI=w196-h111-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHck1tLNeXDU97AVeiKF7pstmtNs0zB-1ywBoeMDsgVk7aUtl4Qf_bBMZgMIr_JKmcdJvX6XJeT5wo0_RFGbpcBe-DSvWNzeFlnZHg7kJr5ar50A6kxWg2kIcyDnWm15pptP2J6-wG61LjD7It9LyJo=w209-h151-s-no?authuser=4",
        "https://lh3.googleusercontent.com/pw/ADCreHel7RxfO7Un7Cdu3jJflDsE6mqffw5gL8iQV7pht0oyY9x2Ke_PRc5r2FQSocAiFfuTItiIePc1Up-sJ8XmnY-ixFvUmz1_Y6i_w8soE2nOpoHz-Nzhs8_251oY1qjIHFSnavobCZ61-E52RxYnOtQ=w213-h134-s-no?authuser=4"
      ],
      "documentation": "Dokumentasi **Paduan Dasar Untuk HTML dan CSS** oleh Komandro adalah tutorial komprehensif untuk pemula yang ingin membangun situs web statis. Dokumen ini dibagi menjadi beberapa bab yang membahas dasar-dasar HTML dan CSS.\n\n---\n\n### Pengenalan\nHTML, CSS, dan JavaScript adalah bahasa dasar untuk pengembangan web. HTML (`Hypertext Markup Language`) digunakan untuk membuat struktur halaman web, CSS (`Cascading Style Sheets`) untuk mengontrol tampilan dan format elemen, dan JavaScript untuk mengatur logika interaktif. Visual Studio Code (VS Code) direkomendasikan sebagai _text editor_.\n\n---\n\n### Bab 2: Dasar-dasar Proyek\n*   **Membuat Folder dan File**: Langkah-langkah detail dijelaskan untuk membuat folder proyek dan dua file utama: `index.html` dan `style.css`.\n*   **Membuat Dasar HTML**: Menjelaskan cara menyiapkan file `index.html` dengan _boilerplate_ HTML dasar dengan mengetik `doc` dan menekan _enter_. Pengguna kemudian dapat menambahkan konten seperti 'hello world' dan melihat hasilnya di _browser_.\n\n---\n\n### Bab 3: Mengisi Struktur HTML Dasar\nBab ini merinci berbagai elemen HTML:\n*   **`Head <head>` dan `Body <body>`**: `Head` berfungsi untuk mengatur _body_ dan tidak ditampilkan, sedangkan `body` adalah tempat elemen yang akan ditampilkan.\n*   **`<h1>` sampai `<h6>`**: Digunakan untuk judul dengan tingkat kepentingan dan ukuran teks yang berbeda.\n*   **`Paragraph <p>`**: Digunakan untuk memuat teks yang lebih panjang dan berukuran lebih kecil dari _header_.\n*   **`Break <br>`**: Membuat baris baru atau jeda, tidak memiliki tag penutup.\n*   **`Bold <b>`, `Underline <u>`, dan `Italic <i>`**: Memberikan efek tebal, garis bawah, dan miring pada teks.\n*   **List (`<ol>` dan `<ul>`)**: \n    *   `ordered list <ol>`: Data terurut menggunakan angka/huruf.\n    *   `unordered list <ul>`: Data tidak terurut, hanya menggunakan titik/bullet.\n*   **`Div <div>`**: Berfungsi sebagai wadah untuk mengelompokkan elemen, tanpa pengaruh visual langsung.\n*   **`Image <img>`**: Untuk memasukkan gambar ke HTML.\n*   **`Button <button>`**: Membuat tombol yang memicu tindakan.\n*   **`Anchor <a>`**: Membuat tautan ke halaman atau URL lain.\n\n---\n\n### Bab 4: Styling (CSS)\nBab ini berfokus pada cara menghias file HTML menggunakan CSS.\n*   **Menghubungkan HTML dengan CSS**: \n    *   **Eksternal CSS**: Menggunakan file terpisah (`style.css`) yang dihubungkan di dalam tag `<head>` HTML.\n    *   **Internal CSS**: Menggunakan tag `<style>` di dalam tag `<head>` HTML.\n    *   **Inline CSS**: Menggunakan atribut `style` langsung pada elemen HTML.\n*   **Properti CSS**: \n    *   **`font-family`**: Mengubah gaya font.\n    *   **`font-size`**: Mengatur ukuran teks.\n    *   **`font-weight`**: Mengatur ketebalan teks.\n    *   **`text-align`**: Mengatur posisi teks (left, center, right).\n    *   **`color`**: Mengubah warna font.\n    *   **`border`**: Membuat batas pada elemen dengan berbagai tipe (misalnya, `solid`).\n    *   **`margin` dan `padding`**: Mengatur jarak luar dan dalam elemen (top, left, bottom, right).\n    *   **`width` dan `height`**: Mengatur lebar dan tinggi elemen.\n    *   **_Class_ (`.`) dan _ID_ (`#`)**: Selektor untuk menerapkan gaya CSS ke elemen tertentu.\n    *   **`Hover`**: Efek visual yang terjadi saat kursor mouse diarahkan ke elemen.\n*   **Menentukan Posisi Item**: Mengatur posisi elemen menggunakan satuan persen (%) atau piksel (px).\n\nDokumen ini menyertakan banyak contoh kode dan _screenshot_ untuk mempermudah pemahaman."
    },
    {
      "id": "item-Komandro-ElectronicsIntro",
      "title": "Pengenalan Elektronika",
      "categories": "#Electronics #Education",
      "description": "Pengantar dasar mengenai dunia elektronika, mendefinisikan apa itu elektronika, komponen dasarnya, dan peran pentingnya dalam kehidupan sehari-hari manusia.",
      "media": [],
      "documentation": "Dokumentasi **Pengenalan Elektronika** oleh Komandro menjelaskan konsep dasar elektronika. Elektronika didefinisikan sebagai ilmu yang mempelajari aliran elektron atau partikel listrik lainnya melalui suatu rangkaian listrik atau bahan.\n\n---\n\n### Komponen Dasar Elektronika\nDokumen ini memperkenalkan komponen-komponen dasar dalam elektronika, meskipun tidak merinci daftar komponen spesifiknya.\n\n---\n\n### Penerapan Elektronika dalam Kehidupan Sehari-hari\nElektronika memiliki peranan yang sangat penting dalam kehidupan manusia, dengan hampir semua aspek kehidupan saat ini telah tersentuh oleh teknologi elektronika. Contoh penerapannya meliputi:\n*   **Telepon**: Untuk komunikasi lisan.\n*   **Komputer**: Untuk memproses informasi.\n*   **Perangkat elektronik konsumen**: Seperti kulkas, AC, dan mesin cuci.\n\nDokumen ini menegaskan bahwa elektronika memiliki peran yang sangat vital dalam kehidupan manusia modern."
    },
    {
      "id": "item-Research-BRPTImpact",
      "title": "Analisis Dampak Bisnis Petrokimia Terhadap Harga Saham BRPT",
      "categories": "#Finance #MarketAnalysis #Investment",
      "description": "Riset yang mengkaji kerentanan bisnis petrokimia PT Barito Pacific Tbk (BRPT) terhadap fluktuasi harga komoditas, persaingan global, risiko nilai tukar, dan tekanan regulasi, serta dampaknya pada harga saham.",
      "media": [],
      "documentation": "Riset ini menyajikan analisis mendalam mengenai dampak negatif bisnis petrokimia terhadap pendapatan dan harga saham PT Barito Pacific Tbk (BRPT).\n\n---\n\n### Kesimpulan\n\nBisnis petrokimia BRPT sangat rentan terhadap:\n* **Fluktuasi harga komoditas** (minyak, gas alam).\n* **Persaingan global dan _oversupply_**.\n* **Risiko nilai tukar mata uang**.\n* **Tekanan regulasi dan lingkungan**.\n\n---\n\n### Dampak ke Harga Saham BRPT\n\n* Setiap penurunan laba atau insiden di segmen petrokimia menyebabkan **koreksi harga saham 10–40%**.\n* Saham BRPT cenderung lebih volatil dibandingkan emiten _geothermal_ murni (contoh: PGEO) karena eksposur petrokimia.\n\n---\n\n### Rekomendasi untuk Investor\n\n* Pantau harga minyak/gas alam, kebijakan impor, dan kinerja TPIA.\n* Alokasikan porsi kecil portofolio ke BRPT jika yakin pada transisi ke _geothermal_.\n\n---\n\n### Sumber Data\n\nLaporan Keuangan BRPT (2018–2023), Laporan Tahunan TPIA, Bloomberg, IDX."
    },
    {
      "id": "item-Research-BCIDecoding",
      "title": "Mendekode Pikiran: Revolusi Antarmuka Otak-Komputer (BCI)",
      "categories": "#Neuroscience #BCI #Technology #Infographics",
      "description": "Infografis analisis visual tentang bagaimana Antarmuka Otak-Komputer (BCI) menerjemahkan sinyal saraf menjadi perintah, menjembatani kesenjangan antara pikiran dan mesin.",
      "media": [],
      "documentation": "Infografis **Mendekode Pikiran: Revolusi Antarmuka Otak-Komputer (BCI)** menyajikan analisis visual tentang cara kerja BCI.\n\n---\n\n### Alur Dekode: 'Batu Rosetta' Algoritmik\nSinyal mentah otak yang bising harus melalui serangkaian proses untuk diubah menjadi perintah yang berguna. Tahapannya adalah:\n* **Sinyal Mentah**: Tegangan dari otak.\n* **Pra-pemrosesan**: Filter & hapus derau.\n* **Ekstraksi Fitur**: Definisikan 'kosakata'.\n* **Dekode**: Terjemahkan niat.\n* **Perintah Mesin**: Gerakkan kursor.\n\n---\n\n### Mesin Penerjemah Otak\nAlgoritma yang berbeda menawarkan pertukaran antara performa dan kemudahan interpretasi. Tren saat ini bergerak menuju model 'kotak hitam' yang lebih kuat.\n\n---\n\n### Terobosan Terbaru\n*   Penelitian berhasil mendekode niat berbicara menjadi teks dengan kecepatan hingga **78 kata per menit**, mendekati kecepatan percakapan alami. Ini dicapai dengan mendekode sinyal dari area otak motorik yang mengontrol artikulator ucapan.\n*   Pada Januari 2024, pasien pertama, **Noland Arbaugh**, penderita _quadriplegia_, menerima implan BCI. Ia menunjukkan kemampuan mengontrol kursor komputer dengan pikirannya, mencapai kinerja puncak 8.0 BPS (_bits-per-second_).\n\n---\n\n### Tantangan & Adaptasi\n*   Beberapa minggu pasca-operasi Noland Arbaugh, sekitar 85% 'threads' elektroda terlepas dari otak, mengurangi input sinyal. Namun, insiden ini memicu inovasi krusial dalam adaptasi teknologi.\n\n---\n\n### Tantangan Etis Utama\nKemampuan untuk mengakses sinyal otak secara langsung memunculkan pertanyaan baru tentang:\n*   **Privasi Saraf**: Siapa yang berhak mengakses data paling pribadi kita?\n*   **Otonomi & Identitas**: Bisakah BCI mengubah siapa kita? Siapa yang bertanggung jawab jika terjadi kesalahan?\n*   **Keadilan & Peningkatan**: Apakah BCI akan menciptakan kesenjangan baru dalam masyarakat?\n\nInfografis ini dibuat berdasarkan analisis komprehensif tentang Antarmuka Otak-Komputer oleh Canvas Infographics, Juni 2025."
    },
    {
      "id": "item-Research-TheFedImpact",
      "title": "Sinyal The Fed & Korelasi Pasar Global",
      "categories": "#Finance #Economics #Infographics",
      "description": "Infografis yang menjelaskan dampak sinyal The Fed (hawkish/dovish) terhadap penguatan/pelemahan USD dan pergerakan saham/aset risiko global.",
      "media": [],
      "documentation": "Infografis **Sinyal The Fed** menjelaskan bagaimana keputusan bank sentral AS membentuk denyut pasar keuangan global.\n\n---\n\n### Hawkish (Ketat)\n*   Cenderung menaikkan suku bunga untuk melawan inflasi.\n*   Menyebabkan **USD menguat**.\n*   **Saham & Aset Risiko turun**.\n\n---\n\n### Dovish (Longgar)\n*   Cenderung memotong suku bunga untuk mendorong pertumbuhan.\n*   Menyebabkan **USD melemah**.\n*   **Saham & Aset Risiko naik**.\n\n---\n\n### Disclaimer Infografis ini dirancang untuk memberikan gambaran umum. Selalu lakukan riset Anda sendiri sebelum mengambil keputusan investasi."
    },
    {
      "id": "item-Research-GoldInvestmentStrategy",
      "title": "Strategi Investasi Emas Mei 2025 dan Seterusnya",
      "categories": "#Investment #Gold #Finance",
      "description": "Strategi investasi emas yang direvisi, mencakup fase jangka pendek (trading, hedging), menengah (DCA, rotasi), dan panjang (akumulasi di support, diversifikasi instrumen), serta manajemen risiko dan rekomendasi platform.",
      "media": [],
      "documentation": "Infografis **Strategi Investasi Emas Periode Mei 2025 dan Seterusnya** dirancang khusus untuk Investor Indonesia.\n\n---\n\n### Fase 1: Jangka Pendek (Mei-Juli 2025) - Mitigasi Volatilitas\n*   **_Tactical Trading_ (Emas Digital/ETF)**: \n    *   _Entry Point_: Rp 1.850.000 - Rp 1.900.000/gram.\n    *   _Stop-Loss_: Rp 1.830.000/gram.\n    *   _Take Profit_: Rp 1.950.000 - Rp 2.000.000/gram.\n    *   **Rekomendasi Platform**: _Pluang_ atau _BNC Sekuritas_ (spread rendah), _Syailendra Gold ETF_ (IDX: GOLD) untuk likuiditas. _Spread_ emas fisik (Rp 151.000/gram) mengurangi keuntungan jangka pendek; emas digital lebih cocok untuk _trading_ aktif.\n*   **_Hedging_ (Kontrak Berjangka)**: Gunakan ICDX Gold Futures (rasio _hedge_ 1:10, 1 kontrak = 100 gram emas) untuk melindungi nilai portofolio fisik.\n*   **Katalis Penting**: \n    *   **15 Mei 2025**: Keputusan The Fed (antisipasi penundaan pemotongan suku bunga).\n    *   **3 Juni 2025**: Data _Non-Farm Payrolls_ AS (penguatan USD).\n\n---\n\n### Fase 2: Jangka Menengah (Q3-Q4 2025) - Akumulasi Bertahap\n*   **_Dollar-Cost Averaging_ (DCA)**: Alokasikan 10-15% dana bulanan via _IndoGold_ (emas batangan digital) atau _Pluang_. Beli setiap akhir bulan (korelasi pelemahan Rupiah akibat pembayaran utang korporasi) atau saat harga turun >2% dalam seminggu.\n*   **Rotasi ke Saham & ETF**:\n    *   **Saham Tambang Emas**: PT Aneka Tambang (ANTM). Beli jika harga global stabil di $3.100–3.200/ounce (alokasi 20% portofolio).\n    *   **ETF Syariah**: _Syailendra Gold ETF_ (IDX: GOLD) untuk eksposur syariah-compliant.\n\n---\n\n### Fase 3: Jangka Panjang (2026+) - Persiapan Tren _Bullish_\n*   **Akumulasi di Level _Support_ Kritis**: \n    *   Harga Global: ~$3.000/ounce (support psikologis).\n    *   Harga Antam: Rp 1.750.000–1.800.000/gram (level 2023).\n*   **Diversifikasi Instrumen**:\n    *   Emas Fisik (Antam): 40% (lindung nilai inflasi & krisis).\n    *   Reksadana Emas: 30% (likuiditas & eksposur global).\n    *   Saham Tambang: 20% (_leverage_ kenaikan harga emas).\n    *   _Crypto Gold-Backed_: 10% (_high-risk-high-reward_).\n\n---\n\n### Manajemen Risiko & Optimalisasi\n*   Terapkan _stop-loss_.\n*   Pertimbangkan biaya tersembunyi (penyimpanan emas fisik, asuransi, biaya manajemen ETF).\n*   Perhatikan risiko nilai tukar (harga Antam dipengaruhi kurs USD/IDR).\n\n---\n\n### Rekomendasi Platform (Revisi)\n*   Fisik: Pegadaian Syariah (likuiditas tinggi, gadai fleksibel).\n*   Digital: _IndoGold_ (harga transparan, _fractional_).\n*   Global: _Interactive Brokers_ (akses COMEX Gold Futures).\n*   Syariah: PT Indo Gold Exchange (akad syariah, audit rutin).\n\n---\n\n### Kesimpulan & Prospek\nStrategi utama adalah memanfaatkan volatilitas Mei 2025 untuk akumulasi bertahap via DCA, diversifikasi ke instrumen likuid dan fisik, serta lindungi portofolio dengan _hedging_ berjangka dan _stop-loss_. Katalis _bullish_ untuk 2026 meliputi pemotongan suku bunga Fed (proyeksi Q1 2026), defisit fiskal AS >5%, dan eskalasi geopolitik Timur Tengah.\n\n_Draft_ ini telah direvisi berdasarkan masukan, dengan pembaruan data (harga Antam 3 Mei 2025 = Rp 1.902.000/gram) dan koreksi platform."
    },
    {
      "id": "item-Research-ChildPersonality",
      "title": "Mengapa Watak Anak Mirip Orang Tua?",
      "categories": "#Psychology #Genetics #Infographics",
      "description": "Infografis yang menjelaskan bahwa orang tua tidak hanya mewariskan gen tetapi juga menciptakan lingkungan yang mendorong sifat serupa pada anak, seperti orang tua ekstrovert menciptakan rumah yang lebih sosial.",
      "media": [],
      "documentation": "Infografis **Mengapa Watak Anak Mirip Orang Tua?** menjelaskan interaksi antara genetika dan lingkungan dalam membentuk kepribadian.\n\n---\n\n### Penjelasan Konsep\nOrang tua tidak hanya mewariskan gen kepada anak-anak mereka, tetapi juga menciptakan lingkungan yang secara konsisten mendukung atau sesuai dengan predisposisi genetik mereka. Sebagai contoh, orang tua yang memiliki sifat ekstrovert cenderung menciptakan lingkungan rumah yang lebih sosial dan interaktif. Lingkungan sosial ini pada gilirannya dapat lebih lanjut mendorong dan memperkuat sifat ekstrovert pada anak-anak mereka, menciptakan kemiripan watak antara orang tua dan anak.\n\n---\n\n### Spesifikasi Infografis\nInfografis ini dibuat berdasarkan analisis dokumen psikologi. Secara teknis, infografis ini dibangun menggunakan **Chart.js** dan **Tailwind CSS**, dan tidak menggunakan SVG atau Mermaid JS."
    },
    {
      "id": "item-Research-MarketOverview",
      "title": "Tinjauan Pasar & Tren Industri Rabu 11 Juni 2025",
      "categories": "#MarketAnalysis #Finance #Infographics",
      "description": "Infografis yang menyajikan rangkuman pasar global (Dow Jones, S&P 500, FTSE 100, Nikkei, IHSG) dan domestik, termasuk analisis saham unggulan (TOBA), pengambilalihan perusahaan (INRU), serta dasbor komoditas dan indikator kunci.",
      "media": [],
      "documentation": "Infografis **Tinjauan Pasar & Tren Industri - 11 Juni 2025** menyediakan rangkuman data pasar global dan domestik.\n\n---\n\n### Potret Pasar Global & Domestik\n*   Menampilkan indeks pasar utama seperti Dow Jones, S&P 500, FTSE 100, Nikkei, dan IHSG beserta perubahan persentasenya pada 11 Juni 2025.\n\n---\n\n### Saham Unggulan: Ledakan Hijau TOBA\n*   **PT TBS Energi Utama (TOBA)** mengalami lonjakan harga lebih dari **107% dalam dua bulan** (April-Juni 2025), didorong oleh komitmen dekarbonisasi dan potensinya di pasar karbon.\n*   Grafik menunjukkan kenaikan tajam harga saham TOBA dari Rp280 (awal April 2025) menjadi Rp580 (10 Juni 2025).\n*   Perusahaan ini fokus pada tiga pilar bisnis hijau: Energi Terbarukan, Pengelolaan Limbah, dan Kendaraan Listrik, sejalan dengan program TBS2030.\n\n---\n\n### INRU: Pengendali Baru dari Hong Kong\n*   PT Toba Pulp Lestari (INRU) diakuisisi oleh _Allied Hill Limited_ dari Hong Kong, yang mengambil alih 92,42% saham dari _Pinnacle Company Pte. Ltd._, melibatkan 1,28 miliar saham INRU.\n\n---\n\n### Dasbor Komoditas & Indikator Kunci\n*   Tabel menyajikan data harga berbagai komoditas dan indikator makroekonomi penting, memberikan gambaran kinerja di berbagai sektor (energi hingga logam mulia).\n\n---\n\n### Rekomendasi Saham (11 Juni 2025)\nInfografis ini juga memberikan rekomendasi saham seperti ANBT, BMRI, ERAA, AKRA, GOTO, dan MEDC, lengkap dengan _support_, _cut loss_, dan _target price_.\n\n---\n\n### Disclaimer Informasi ini bukan saran investasi. Pengguna selalu disarankan untuk melakukan riset sendiri."
    },
    {
      "id": "item-SuitOsom-Game",
      "title": "Permainan Suit (Gunting Batu Kertas) Osom",
      "categories": "#Android #Game",
      "description": "Aplikasi permainan gunting batu kertas untuk Android yang memungkinkan pengguna memilih lawan antara sesama pemain atau komputer, menampilkan hasil permainan, dan opsi main lagi atau kembali ke menu.",
      "media": [],
      "documentation": "Proyek **Suit Osom** adalah sebuah aplikasi permainan gunting batu kertas (Rock Paper Scissors) untuk platform Android.\n\n---\n\n### Antarmuka Pengguna (UI) & Alur Permainan\n*   **Layar Onboarding**: Pengguna akan melewati beberapa layar _onboarding_ yang memperkenalkan permainan, menjelaskan mode lawan (pemain vs pemain atau pemain vs CPU), dan meminta input nama pengguna.\n*   **Pemilihan Lawan**: Pengguna disajikan pilihan untuk bermain 'Pemain vs Pemain' atau 'Pemain vs CPU'.\n*   **Permainan Inti**: Antarmuka permainan menampilkan opsi 'Batu', 'Kertas', 'Gunting' untuk dipilih. Ini juga menunjukkan pilihan yang dibuat oleh Pemain 1 dan/atau Pemain 2/CPU (misalnya, 'Pemain 1 Memilih Batu').\n*   **Hasil Permainan**: Setelah permainan, hasil akan ditampilkan (misalnya, 'Pemain 1 Menang').\n*   **Opsi Lanjutan**: Terdapat tombol 'Reset' untuk memulai ulang, 'Main Lagi' untuk mengulang permainan yang sama, dan 'Kembali ke Menu' untuk kembali ke layar pemilihan lawan.\n\n---\n\n### Catatan Sumber ini tidak menyediakan detail tentang bahasa pemrograman yang digunakan (misalnya, Java, Kotlin) atau struktur kode, namun ini adalah aplikasi Android berdasarkan nama file dan _path_ (`app/src/main/res/values/themes.xml`)."
    }
  ]
}